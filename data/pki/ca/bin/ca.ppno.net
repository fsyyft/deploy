#!/bin/bash

. ../../shell/functions

# 脚本所在目录。
# 这里要注意下，如果写 /usr/bin/cd 会有问题。
PATH_SHELL_FOLDER=$(cd `${SHELL_DIRNAME} $0`;${SHELL_PWD})

PATH_ROOT=${PATH_SHELL_FOLDER}/../
PATH_CONFIG=${PATH_ROOT}/conf/ca.ppno.net.conf

# 根证书的有效期开始时间。
CONF_STARTDATE_ROOT=151029151029Z
# 根证书的有效期结束时间。
CONF_ENDDATE_ROOT=331029151029Z
# 证书的有效期开始时间。
CONF_STARTDATE=181029151029Z
# 证书的有效期结束时间。
CONF_ENDDATE=211029151029Z
# 域名。
CONF_DOMAIN=ppno.net

# 是否调试阶段。
CONF_DEBUG=1

cd ${PATH_ROOT}
echo_blue 进入工作目录：$(${SHELL_PWD})

# 解压密钥，解压后的密钥放在 private 文件夹。
# 参数1：密钥的名称，不包含扩展名 .zip。
function unzip_key() {
    KEY=$1
    ZIP_FILE=private/${KEY}.zip

    if [ -f ${ZIP_FILE} ]; then
        # 解压文件。
        ${SHELL_UNZIP} ${ZIP_FILE}
        # 移动文件到 private 目录。
        ${SHELL_MV} ${KEY} private/
    else
        echo_red "文件 ${ZIP_FILE} 不存在。"
        exit
    fi
}

# 删除数据库中的指定的序列号；仅当 CONF_DEBUG 设置为 1 是有效。
# 参数1：序列号。
function del_exists_serial() {
    if [[ ${CONF_DEBUG} == 1 ]]; then
        # 删除数据库中的当前使用的序列号，将结果放到临时文件。
        # 匹配序列号时，前后需要包含空格。
        ${SHELL_CAT} index.txt | ${SHELL_GREP} -v $1 > index.tmp
        # 删除数据库文件。
        ${SHELL_RM} -rf index.txt
        # 临时文件改名为正式文件。
        ${SHELL_MV} index.tmp index.txt
    fi
}

function req_ca () {
    FILE_KEY=ca.ppno.net.key
    FILE_CSR=ca.ppno.net.csr
    CONF_EXTENSIONS=v3_ca_root
    CONF_SERIAL=E3E3E30100E3

    rm_file private/${FILE_KEY}
    rm_file certs/${FILE_CSR}

    unzip_key ${FILE_KEY}

    export SUBJ_OU_0="GlobalDevSign Root CA"
    export SUBJ_OU_1="ca.ppno.net"
    export SUBJ_CN="GlobalDevSign Root CA"

    echo_blue 请求开始。
    ${SHELL_OPENSSL} req                                \
                    -new                                \
                    -config ${PATH_CONFIG}              \
                    -extensions ${CONF_EXTENSIONS}      \
                    -set_serial 0x${CONF_SERIAL}        \
                    -key private/${FILE_KEY}            \
                    -out certs/${FILE_CSR}
   
    unset SUBJ_OU_0
    unset SUBJ_OU_1
    unset SUBJ_CN

    ${SHELL_RM} -rf private/${FILE_KEY}

    echo_blue 请求完成：

    ${SHELL_OPENSSL} req                                \
                    -noout                              \
                    -text                               \
                    -in certs/${FILE_CSR}
}

function selfsign_ca () {
    FILE_KEY=ca.ppno.net.key
    FILE_CSR=ca.ppno.net.csr
    FILE_CRT=ca.ppno.net.crt
    CONF_EXTENSIONS=v3_ca_root
    CONF_SERIAL=E3E3E30100E3

    rm_file private/${FILE_KEY}

    unzip_key ${FILE_KEY}

    # 设置当前使用的序列号。
    ${SHELL_ECHO} ${CONF_SERIAL} > serial

    # 删除数据库中的当前使用的序列号。
    del_exists_serial ${CONF_SERIAL}

    ${SHELL_OPENSSL} ca                                 \
                    -selfsign                           \
                    -config ${PATH_CONFIG}              \
                    -extensions ${CONF_EXTENSIONS}      \
                    -startdate ${CONF_STARTDATE_ROOT}   \
                    -enddate ${CONF_ENDDATE_ROOT}       \
                    -keyfile private/${FILE_KEY}        \
                    -in certs/${FILE_CSR}               \
                    -out certs/${FILE_CRT}

    ${SHELL_RM} -rf private/${FILE_KEY}

    echo_blue 签名完成。
}

function req_ca_vpn () {
    FILE_KEY=ca.vpn.ppno.net.key
    FILE_CSR=ca.vpn.ppno.net.csr
    CONF_EXTENSIONS=v3_ca_vpn
    CONF_SERIAL=E3E3E3020101

    rm_file private/${FILE_KEY}
    rm_file certs/${FILE_CSR}

    unzip_key ${FILE_KEY}
    
    export SUBJ_OU_0="GlobalDevSign VPN Authority"
    export SUBJ_OU_1="ca.vpn.ppno.net"
    export SUBJ_CN="GlobalDevSign VPN Authority"

    echo_blue 请求开始。
    ${SHELL_OPENSSL} req                                \
                    -new                                \
                    -config ${PATH_CONFIG}              \
                    -extensions ${CONF_EXTENSIONS}      \
                    -set_serial 0x${CONF_SERIAL}        \
                    -key private/${FILE_KEY}            \
                    -out certs/${FILE_CSR}
   
    unset SUBJ_OU_0
    unset SUBJ_OU_1
    unset SUBJ_CN

    ${SHELL_RM} -rf private/${FILE_KEY}

    echo_blue 请求完成：

    ${SHELL_OPENSSL} req                                \
                    -noout                              \
                    -text                               \
                    -in certs/${FILE_CSR}
}

function sign_ca_vpn () {
    FILE_KEY_CA=ca.ppno.net.key
    FILE_CRT_CA=ca.ppno.net.crt
    FILE_CSR=ca.vpn.ppno.net.csr
    FILE_CRT=ca.vpn.ppno.net.crt
    CONF_EXTENSIONS=v3_ca_vpn
    CONF_SERIAL=E3E3E3020101

    rm_file private/${FILE_KEY_CA}

    unzip_key ${FILE_KEY_CA}

    # 设置当前使用的序列号。
    ${SHELL_ECHO} ${CONF_SERIAL} > serial

    # 删除数据库中的当前使用的序列号。
    del_exists_serial ${CONF_SERIAL}

    ${SHELL_OPENSSL} ca                                 \
                    -config ${PATH_CONFIG}              \
                    -extensions ${CONF_EXTENSIONS}      \
                    -startdate ${CONF_STARTDATE}        \
                    -enddate ${CONF_ENDDATE}            \
                    -keyfile private/${FILE_KEY_CA}     \
                    -cert certs/${FILE_CRT_CA}          \
                    -in certs/${FILE_CSR}               \
                    -out certs/${FILE_CRT}

    ${SHELL_RM} -rf private/${FILE_KEY_CA}

    echo_blue 签名完成。
}

function req_ca_vpn_openvpn () {
    FILE_KEY=ca.openvpn.vpn.ppno.net.key
    FILE_CSR=ca.openvpn.vpn.ppno.net.csr
    CONF_EXTENSIONS=v3_ca_vpn_openvpn
    CONF_SERIAL=E3E3E303010101

    rm_file private/${FILE_KEY}
    rm_file certs/${FILE_CSR}

    unzip_key ${FILE_KEY}
    
    export SUBJ_OU_0="GlobalDevSign OpenVPN Authority"
    export SUBJ_OU_1="ca.openvpn.vpn.ppno.net"
    export SUBJ_CN="GlobalDevSign OpenVPN Authority"

    echo_blue 请求开始。
    ${SHELL_OPENSSL} req                                \
                    -new                                \
                    -config ${PATH_CONFIG}              \
                    -extensions ${CONF_EXTENSIONS}      \
                    -set_serial 0x${CONF_SERIAL}        \
                    -key private/${FILE_KEY}            \
                    -out certs/${FILE_CSR}
   
    unset SUBJ_OU_0
    unset SUBJ_OU_1
    unset SUBJ_CN

    ${SHELL_RM} -rf private/${FILE_KEY}

    echo_blue 请求完成：

    ${SHELL_OPENSSL} req                                \
                    -noout                              \
                    -text                               \
                    -in certs/${FILE_CSR}
}

function sign_ca_vpn_openvpn () {
    FILE_KEY_CA=ca.vpn.ppno.net.key
    FILE_CRT_CA=ca.vpn.ppno.net.crt
    FILE_CSR=ca.openvpn.vpn.ppno.net.csr
    FILE_CRT=ca.openvpn.vpn.ppno.net.crt
    CONF_EXTENSIONS=v3_ca_vpn_openvpn
    CONF_SERIAL=E3E3E303010101

    rm_file private/${FILE_KEY_CA}

    unzip_key ${FILE_KEY_CA}

    # 设置当前使用的序列号。
    ${SHELL_ECHO} ${CONF_SERIAL} > serial

    # 删除数据库中的当前使用的序列号。
    del_exists_serial ${CONF_SERIAL}

    ${SHELL_OPENSSL} ca                                 \
                    -config ${PATH_CONFIG}              \
                    -extensions ${CONF_EXTENSIONS}      \
                    -startdate ${CONF_STARTDATE}        \
                    -enddate ${CONF_ENDDATE}            \
                    -keyfile private/${FILE_KEY_CA}     \
                    -cert certs/${FILE_CRT_CA}          \
                    -in certs/${FILE_CSR}               \
                    -out certs/${FILE_CRT}

    ${SHELL_RM} -rf private/${FILE_KEY_CA}

    echo_blue 签名完成。
}

function req_vpn_openvpn_server () {
    SERVER_NAME=$1
    SERVER_ID=$2
    SERVER_IP=$3

    SERVER_DOMAIN_BASE=server.openvpn.${CONF_DOMAIN}
    SERVER_DOMAIN=${SERVER_NAME}.${SERVER_DOMAIN_BASE}

    # 服务端只用一个密钥对。
    FILE_KEY=${SERVER_DOMAIN_BASE}.key
    FILE_CSR=${SERVER_DOMAIN}.csr
    CONF_EXTENSIONS=v3_vpn_openvpn_server
    CONF_SERIAL=E3E3E30401010100${SERVER_ID}

    rm_file private/${FILE_KEY}
    rm_file certs/${FILE_CSR}

    unzip_key ${FILE_KEY}
    
    export SUBJ_OU_0="GlobalDevSign OpenVPN Server Authority"
    export SUBJ_OU_1=${SERVER_DOMAIN}
    export SUBJ_CN=${SERVER_DOMAIN}
    export SUBJ_OPENVPN_SERVER_NAME=${SERVER_NAME}
    export SUBJ_OPENVPN_IP=${SERVER_IP}

    echo_blue 请求开始。
    ${SHELL_OPENSSL} req                                \
                    -new                                \
                    -config ${PATH_CONFIG}              \
                    -extensions ${CONF_EXTENSIONS}      \
                    -set_serial 0x${CONF_SERIAL}        \
                    -key private/${FILE_KEY}            \
                    -out certs/openvpn/${FILE_CSR}
   
    unset SUBJ_OU_0
    unset SUBJ_OU_1
    unset SUBJ_CN
    unset SUBJ_OPENVPN_SERVER_NAME
    unset SUBJ_OPENVPN_IP

    ${SHELL_RM} -rf private/${FILE_KEY}

    echo_blue 请求完成：

    ${SHELL_OPENSSL} req                                \
                    -noout                              \
                    -text                               \
                    -in certs/openvpn/${FILE_CSR}
}

function sign_vpn_openvpn_server () {
    SERVER_NAME=$1
    SERVER_ID=$2
    SERVER_IP=$3

    SERVER_DOMAIN_BASE=server.openvpn.${CONF_DOMAIN}
    SERVER_DOMAIN=${SERVER_NAME}.${SERVER_DOMAIN_BASE}

    FILE_KEY_CA=ca.openvpn.vpn.${CONF_DOMAIN}.key
    FILE_CRT_CA=ca.openvpn.vpn.${CONF_DOMAIN}.crt
    FILE_CSR=${SERVER_DOMAIN}.csr
    FILE_CRT=${SERVER_DOMAIN}.crt
    CONF_EXTENSIONS=v3_vpn_openvpn_server
    CONF_SERIAL=E3E3E30401010100${SERVER_ID}

    rm_file private/${FILE_KEY_CA}

    unzip_key ${FILE_KEY_CA}

    # 设置当前使用的序列号。
    ${SHELL_ECHO} ${CONF_SERIAL} > serial

    # 删除数据库中的当前使用的序列号。
    del_exists_serial ${CONF_SERIAL}

    export SUBJ_OU_0="GlobalDevSign OpenVPN Server Authority"
    export SUBJ_OU_1=${SERVER_DOMAIN}
    export SUBJ_CN=${SERVER_DOMAIN}
    export SUBJ_OPENVPN_SERVER_NAME=${SERVER_NAME}
    export SUBJ_OPENVPN_IP=${SERVER_IP}

    ${SHELL_OPENSSL} ca                                 \
                    -config ${PATH_CONFIG}              \
                    -extensions ${CONF_EXTENSIONS}      \
                    -startdate ${CONF_STARTDATE}        \
                    -enddate ${CONF_ENDDATE}            \
                    -keyfile private/${FILE_KEY_CA}     \
                    -cert certs/${FILE_CRT_CA}          \
                    -in certs/openvpn/${FILE_CSR}       \
                    -out certs/openvpn/${FILE_CRT}

    
    unset SUBJ_OU_0
    unset SUBJ_OU_1
    unset SUBJ_CN
    unset SUBJ_OPENVPN_SERVER_NAME
    unset SUBJ_OPENVPN_IP

    ${SHELL_RM} -rf private/${FILE_KEY_CA}

    echo_blue 签名完成。
}

########## ########## ########## ########## ##########
# 生成 OpenVPN 客户端证书请求文件。
function req_vpn_openvpn_client () {
    CLIENT_NAME=$1
    CLIENT_ID=$2
    CLIENT_IP=$3

    CLIENT_DOMAIN_BASE=openvpn.${CONF_DOMAIN}
    CLIENT_DOMAIN=${CLIENT_NAME}.${CLIENT_DOMAIN_BASE}

    FILE_KEY=${CLIENT_DOMAIN}.key
    FILE_CSR=${CLIENT_DOMAIN}.csr
    CONF_EXTENSIONS=v3_vpn_openvpn_client
    CONF_SERIAL=E3E3E30401010101${CLIENT_ID}

    rm_file private/${FILE_KEY}
    rm_file certs/${FILE_CSR}

    unzip_key ${FILE_KEY}
    
    export SUBJ_OU_0="GlobalDevSign OpenVPN Client Authority"
    export SUBJ_OU_1=${CLIENT_DOMAIN}
    export SUBJ_CN=${CLIENT_DOMAIN}
    export SUBJ_OPENVPN_CLIENT_NAME=${CLIENT_NAME}
    export SUBJ_OPENVPN_IP=${CLIENT_IP}

    echo_blue 请求开始。
    ${SHELL_OPENSSL} req                                \
                    -new                                \
                    -config ${PATH_CONFIG}              \
                    -extensions ${CONF_EXTENSIONS}      \
                    -set_serial 0x${CONF_SERIAL}        \
                    -key private/${FILE_KEY}            \
                    -out certs/openvpn/${FILE_CSR}
   
    unset SUBJ_OU_0
    unset SUBJ_OU_1
    unset SUBJ_CN
    unset SUBJ_OPENVPN_CLIENT_NAME
    unset SUBJ_OPRNVPN_IP

    ${SHELL_RM} -rf private/${FILE_KEY}

    echo_blue 请求完成：

    ${SHELL_OPENSSL} req                                \
                    -noout                              \
                    -text                               \
                    -in certs/openvpn/${FILE_CSR}
}

########## ########## ########## ########## ##########
# 签名 OpenVPN 客户端证书。
function sign_vpn_openvpn_client () {
    CLIENT_NAME=$1
    CLIENT_ID=$2
    CLIENT_IP=$3

    CLIENT_DOMAIN_BASE=openvpn.${CONF_DOMAIN}
    CLIENT_DOMAIN=${CLIENT_NAME}.${CLIENT_DOMAIN_BASE}

    FILE_KEY_CA=ca.openvpn.vpn.${CONF_DOMAIN}.key
    FILE_CRT_CA=ca.openvpn.vpn.${CONF_DOMAIN}.crt
    FILE_CSR=${CLIENT_DOMAIN}.csr
    FILE_CRT=${CLIENT_DOMAIN}.crt
    CONF_EXTENSIONS=v3_vpn_openvpn_client
    CONF_SERIAL=E3E3E30401010101${CLIENT_ID}

    rm_file private/${FILE_KEY_CA}

    unzip_key ${FILE_KEY_CA}

    # 设置当前使用的序列号。
    ${SHELL_ECHO} ${CONF_SERIAL} > serial

    # 删除数据库中的当前使用的序列号。
    del_exists_serial ${CONF_SERIAL}

    export SUBJ_OU_0="GlobalDevSign OpenVPN Client Authority"
    export SUBJ_OU_1=${CLIENT_DOMAIN}
    export SUBJ_CN=${CLIENT_DOMAIN}
    export SUBJ_OPENVPN_CLIENT_NAME=${CLIENT_NAME}
    export SUBJ_OPENVPN_IP=${CLIENT_IP}

    ${SHELL_OPENSSL} ca                                 \
                    -config ${PATH_CONFIG}              \
                    -extensions ${CONF_EXTENSIONS}      \
                    -startdate ${CONF_STARTDATE}        \
                    -enddate ${CONF_ENDDATE}            \
                    -keyfile private/${FILE_KEY_CA}     \
                    -cert certs/${FILE_CRT_CA}          \
                    -in certs/openvpn/${FILE_CSR}       \
                    -out certs/openvpn/${FILE_CRT}

    
    unset SUBJ_OU_0
    unset SUBJ_OU_1
    unset SUBJ_CN
    unset SUBJ_OPENVPN_CLIENT_NAME
    unset SUBJ_OPRNVPN_IP

    ${SHELL_RM} -rf private/${FILE_KEY_CA}

    echo_blue 签名完成。
}

case $1 in
    "req_ca") req_ca ;;
    "selfsign_ca") selfsign_ca ;;
    "req_ca_vpn") req_ca_vpn ;;
    "sign_ca_vpn") sign_ca_vpn;;
    "req_ca_vpn_openvpn") req_ca_vpn_openvpn;;
    "sign_ca_vpn_openvpn") sign_ca_vpn_openvpn;;
    "req_vpn_openvpn_server") req_vpn_openvpn_server $2 $3 $4;;
    "sign_vpn_openvpn_server") sign_vpn_openvpn_server $2 $3 $4;;
    "req_vpn_openvpn_client") req_vpn_openvpn_client $2 $3 $4;;
    "sign_vpn_openvpn_client") sign_vpn_openvpn_client $2 $3 $4;;
esac
